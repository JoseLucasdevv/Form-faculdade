{"version":3,"file":"validatebundle.js","mappings":"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","sources":["webpack://form/./src/validate.js"],"sourcesContent":["class Validate {\n  constructor() {\n    this.inputUser = document.getElementById(\"username\");\n    this.inputPassword = document.getElementById(\"new-password\");\n    this.inputRepeatPassword = document.getElementById(\"repeat-password\");\n    this.inputAddress = document.getElementById(\"address\");\n    this.inputEmail = document.getElementById(\"email\");\n    this.btn = document.querySelector(\".btn\");\n    this.textSucess = document.querySelector(\".sucess\");\n    this.textError = document.querySelector(\".error\");\n    this.inputCheckbox = document.getElementById(\"term\");\n    this.inputs = [\n      this.inputUser,\n      this.inputPassword,\n      this.inputRepeatPassword,\n      this.inputEmail,\n      this.inputAddress,\n      this.inputCheckbox,\n      this.btn,\n    ];\n    this.verificate();\n  }\n  verificate() {\n    document.addEventListener(\"click\", (e) => {\n      const el = e.target;\n      if (el.classList.contains(\"btn\")) {\n        this.eventPrevenDefault(e);\n        if (this.verificateInputUser() === false) {\n          return;\n        }\n        if (this.verificateInputPassword() === false) {\n          return;\n        }\n        if (this.verificateInputRepeatPassword() === false) {\n          return;\n        }\n\n        if (this.verificateInputEmail() === false) {\n          return;\n        }\n        if (this.verificateInputAddress() === false) {\n          return;\n        }\n        if (this.verificateInputChecked() === false) {\n          return;\n        }\n        this.FormSucess();\n      }\n    });\n  }\n\n  eventPrevenDefault(e) {\n    e.preventDefault();\n  }\n  createSpan() {\n    const span = document.createElement(\"span\");\n    return span;\n  }\n  removeSpan(input) {\n    if (\n      input.nextElementSibling.classList.contains(\"error\") ||\n      input.nextElementSibling.classList.contains(\"sucess\")\n    ) {\n      input.nextElementSibling.remove();\n    }\n  }\n  verificateInputUser() {\n    const regexNumbers = /^[0-9]/;\n    this.removeSpan(this.inputs[0]);\n\n    if (this.inputUser.value === \"\") {\n      const span = this.createSpan();\n      span.innerText = \"o input não pode estar vázio\";\n      span.classList.add(\"error\");\n      this.inputUser.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n\n    if (regexNumbers.test(this.inputUser.value)) {\n      const span = this.createSpan();\n      span.innerText = \"Não utilize números no usuário\";\n      span.classList.add(\"error\");\n      this.inputUser.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n    if (this.inputUser.value.length < 5) {\n      const span = this.createSpan();\n      span.innerText = \"o usuário precisa de no mínimo 5 caracteres\";\n      span.classList.add(\"error\");\n      this.inputUser.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n    return true;\n  }\n  verificateInputPassword() {\n    this.removeSpan(this.inputs[1]);\n    if (this.inputPassword.value === \"\") {\n      const span = this.createSpan();\n      span.innerText = \"o input não pode estar vázio\";\n      span.classList.add(\"error\");\n      this.inputPassword.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n    if (this.inputPassword.value.length < 8) {\n      const span = this.createSpan();\n      span.innerText = \"a senha precisa de no mínimo 8 caracteres\";\n      span.classList.add(\"error\");\n      this.inputPassword.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n  }\n  verificateInputRepeatPassword() {\n    this.removeSpan(this.inputs[2]);\n    if (this.inputRepeatPassword.value !== this.inputPassword.value) {\n      const span = this.createSpan();\n      span.innerText = \"As Senhas devem ser iguais :)\";\n      span.classList.add(\"error\");\n      this.inputRepeatPassword.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n  }\n  verificateInputEmail() {\n    this.removeSpan(this.inputs[3]);\n    const email = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (this.inputEmail.value === \"\") {\n      const span = this.createSpan();\n      span.innerText = \"o input não pode estar vázio\";\n      span.classList.add(\"error\");\n      this.inputEmail.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n    if (!email.test(this.inputEmail.value)) {\n      const span = this.createSpan();\n      span.innerText = \"Email Inválido\";\n      span.classList.add(\"error\");\n      this.inputEmail.insertAdjacentElement(\"afterend\", span);\n      return false;\n    }\n  }\n  verificateInputAddress() {\n    const span = document.querySelector(\".msgErrorAddress\");\n    if (!this.inputAddress.value) {\n      span.innerText = \"o input não pode estar vázio\";\n      return false;\n    } else {\n      span.innerText = \"\";\n    }\n  }\n\n  verificateInputChecked() {\n    const textInputCheckbox = document.querySelector(\".textInputCheckbox\");\n\n    if (this.inputCheckbox.checked === false) {\n      textInputCheckbox.innerText = \"Necessário confirmar os termos\";\n      return false;\n    } else {\n      textInputCheckbox.innerText = \"\";\n    }\n  }\n  FormSucess() {\n    const div = document.querySelector(\".btn-wrapper\");\n    const span = this.createSpan();\n    span.innerText = \"Cadastro realizado com sucesso\";\n    span.classList.add(\"success\");\n    div.insertAdjacentElement(\"afterend\", span);\n    setTimeout(() => {\n      window.open(\"http://localhost:3000/\", self);\n    }, 1000);\n  }\n}\n\nconst validate = new Validate();\n"],"names":["Validate","_classCallCheck","inputUser","document","getElementById","inputPassword","inputRepeatPassword","inputAddress","inputEmail","btn","querySelector","textSucess","textError","inputCheckbox","inputs","verificate","_createClass","key","value","_this","addEventListener","e","el","target","classList","contains","eventPrevenDefault","verificateInputUser","verificateInputPassword","verificateInputRepeatPassword","verificateInputEmail","verificateInputAddress","verificateInputChecked","FormSucess","preventDefault","createSpan","span","createElement","removeSpan","input","nextElementSibling","remove","regexNumbers","innerText","add","insertAdjacentElement","test","length","email","textInputCheckbox","checked","div","setTimeout","window","open","self","validate"],"sourceRoot":""}